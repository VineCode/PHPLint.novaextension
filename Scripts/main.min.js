exports.activate=function(){},exports.deactivate=function(){};class IssuesProvider{runningCodeSniffer(editor){return new Promise(function(resolve){const issues=[];var path=editor.document.path,execPath=nova.config.get("VineCode.PHPLint.execPath");execPath||(execPath="php"),execPath.replace(/(\s+)/g,"\\$1");const process=new Process("/usr/bin/env",{args:[execPath,"-l",path]});var stdOut=new Array;process.onStdout(function(line){stdOut.push(line.trim())}),process.onDidExit(function(){if(-1!==stdOut[0].search("No syntax errors"))return resolve(),!1;console.log(stdOut);try{const found=/line ([0-9]+)$/g.exec(stdOut[1]);var message=stdOut[1];message=message.replace(path,nova.workspace.relativizePath(path));let issue=new Issue;issue.message=message,issue.severity=IssueSeverity.Error,issue.line=found[1],issues.push(issue),resolve(issues)}catch(e){issues.push(e)}}),process.start()})}async provideIssues(editor){return await this.runningCodeSniffer(editor)}}nova.assistants.registerIssueAssistant("php",new IssuesProvider);